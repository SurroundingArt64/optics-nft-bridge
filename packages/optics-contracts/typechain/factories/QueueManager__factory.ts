/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { QueueManager, QueueManagerInterface } from "../QueueManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_item",
        type: "bytes32",
      },
    ],
    name: "queueContains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueEnd",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queueLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102be806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632bef289214610046578063ab91c7b01461008a578063f6d16102146100a8575b600080fd5b6100726004803603602081101561005c57600080fd5b81019080803590602001909291905050506100c6565b60405180821515815260200191505060405180910390f35b6100926100e3565b6040518082815260200191505060405180910390f35b6100b06100f4565b6040518082815260200191505060405180910390f35b60006100dc82600161010590919063ffffffff16565b9050919050565b60006100ef60016101b7565b905090565b60006101006001610215565b905090565b6000808360000160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1690505b8360000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681116101ab578284600101600083815260200190815260200160002054141561019e5760019150506101b1565b808060010191505061013e565b50600090505b92915050565b6000808260000160109054906101000a90046fffffffffffffffffffffffffffffffff16905060008360000160009054906101000a90046fffffffffffffffffffffffffffffffff16905061020c8282610266565b92505050919050565b60008160010160008360000160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008160018401036fffffffffffffffffffffffffffffffff1690509291505056fea2646970667358221220526511885d23a3bb63fb216bc70939fed2f299853185f376850d751d661f682064736f6c63430007060033";

export class QueueManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QueueManager> {
    return super.deploy(overrides || {}) as Promise<QueueManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): QueueManager {
    return super.attach(address) as QueueManager;
  }
  connect(signer: Signer): QueueManager__factory {
    return super.connect(signer) as QueueManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QueueManagerInterface {
    return new utils.Interface(_abi) as QueueManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QueueManager {
    return new Contract(address, _abi, signerOrProvider) as QueueManager;
  }
}
