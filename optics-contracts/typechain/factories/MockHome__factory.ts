/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockHome, MockHomeInterface } from "../MockHome";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101f2806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063fa31de0114610030575b600080fd5b6101036004803603606081101561004657600080fd5b81019080803563ffffffff169060200190929190803590602001909291908035906020019064010000000081111561007d57600080fd5b82018360208201111561008f57600080fd5b803590602001918460018302840111640100000000831117156100b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610105565b005b7f3cae29692250f614fa695d6986ad94fcc3e0852fbc3c07912b493e2aa3158c35838383604051808463ffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561017b578082015181840152602081019050610160565b50505050905090810190601f1680156101a85780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505056fea26469706673582212200120c3c613936d1c2be6cbe35a8794718e78b5880db09e1644725e784aa65a4964736f6c63430007060033";

export class MockHome__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockHome> {
    return super.deploy(overrides || {}) as Promise<MockHome>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockHome {
    return super.attach(address) as MockHome;
  }
  connect(signer: Signer): MockHome__factory {
    return super.connect(signer) as MockHome__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockHomeInterface {
    return new utils.Interface(_abi) as MockHomeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockHome {
    return new Contract(address, _abi, signerOrProvider) as MockHome;
  }
}
