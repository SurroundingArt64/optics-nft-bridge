/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20Upgradeable,
  ERC20UpgradeableInterface,
} from "../ERC20Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506117a1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d71461024f578063a9059cbb1461027f578063dd62ed3e146102af578063f2fde38b146102df576100ea565b8063715018a6146102095780638da5cb5b1461021357806395d89b4114610231576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806370a08231146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102fb565b6040516101049190611189565b60405180910390f35b61012760048036038101906101229190610f67565b61038d565b604051610134919061116e565b60405180910390f35b6101456103ab565b60405161015291906112cb565b60405180910390f35b61017560048036038101906101709190610f18565b6103b5565b604051610182919061116e565b60405180910390f35b6101936104ad565b6040516101a091906112e6565b60405180910390f35b6101c360048036038101906101be9190610f67565b6104b6565b6040516101d0919061116e565b60405180910390f35b6101f360048036038101906101ee9190610eb3565b610562565b60405161020091906112cb565b60405180910390f35b6102116105c3565b005b61021b61064b565b6040516102289190611153565b60405180910390f35b610239610675565b6040516102469190611189565b60405180910390f35b61026960048036038101906102649190610f67565b610707565b604051610276919061116e565b60405180910390f35b61029960048036038101906102949190610f67565b6107f2565b6040516102a6919061116e565b60405180910390f35b6102c960048036038101906102c49190610edc565b610810565b6040516102d691906112cb565b60405180910390f35b6102f960048036038101906102f49190610eb3565b6108bf565b005b60606068805461030a906113fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610336906113fb565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b5050505050905090565b60006103a161039a6109b7565b84846109bf565b6001905092915050565b6000606754905090565b60006103c2848484610b25565b6000606660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061040d6109b7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561048d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104849061122b565b60405180910390fd5b6104a1856104996109b7565b8584036109bf565b60019150509392505050565b60006012905090565b60006105586104c36109b7565b8484606660006104d16109b7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610553919061131d565b6109bf565b6001905092915050565b600061056d82610d44565b156105b957606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506105be565b600090505b919050565b6105cb6109b7565b73ffffffffffffffffffffffffffffffffffffffff166105e961064b565b73ffffffffffffffffffffffffffffffffffffffff161461063f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106369061124b565b60405180910390fd5b6106496000610db9565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060698054610684906113fb565b80601f01602080910402602001604051908101604052809291908181526020018280546106b0906113fb565b80156106fd5780601f106106d2576101008083540402835291602001916106fd565b820191906000526020600020905b8154815290600101906020018083116106e057829003601f168201915b5050505050905090565b600080606660006107166109b7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca906112ab565b60405180910390fd5b6107e76107de6109b7565b858584036109bf565b600191505092915050565b60006108066107ff6109b7565b8484610b25565b6001905092915050565b600061081b83610d44565b8061082b575061082a82610d44565b5b156108b457606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506108b9565b600090505b92915050565b6108c76109b7565b73ffffffffffffffffffffffffffffffffffffffff166108e561064b565b73ffffffffffffffffffffffffffffffffffffffff161461093b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109329061124b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a2906111cb565b60405180910390fd5b6109b481610db9565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a269061128b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a96906111eb565b60405180910390fd5b80606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8c9061126b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfc906111ab565b60405180910390fd5b610c10838383610e7f565b6000606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8e9061120b565b60405180910390fd5b818103606560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2c919061131d565b92505081905550610d3e848484610e84565b50505050565b60003373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480610db257503373ffffffffffffffffffffffffffffffffffffffff16610d9a61064b565b73ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081359050610e988161173d565b92915050565b600081359050610ead81611754565b92915050565b600060208284031215610ec557600080fd5b6000610ed384828501610e89565b91505092915050565b60008060408385031215610eef57600080fd5b6000610efd85828601610e89565b9250506020610f0e85828601610e89565b9150509250929050565b600080600060608486031215610f2d57600080fd5b6000610f3b86828701610e89565b9350506020610f4c86828701610e89565b9250506040610f5d86828701610e9e565b9150509250925092565b60008060408385031215610f7a57600080fd5b6000610f8885828601610e89565b9250506020610f9985828601610e9e565b9150509250929050565b610fac81611373565b82525050565b610fbb81611385565b82525050565b6000610fcc82611301565b610fd6818561130c565b9350610fe68185602086016113c8565b610fef8161148b565b840191505092915050565b600061100760238361130c565b91506110128261149c565b604082019050919050565b600061102a60268361130c565b9150611035826114eb565b604082019050919050565b600061104d60228361130c565b91506110588261153a565b604082019050919050565b600061107060268361130c565b915061107b82611589565b604082019050919050565b600061109360288361130c565b915061109e826115d8565b604082019050919050565b60006110b660208361130c565b91506110c182611627565b602082019050919050565b60006110d960258361130c565b91506110e482611650565b604082019050919050565b60006110fc60248361130c565b91506111078261169f565b604082019050919050565b600061111f60258361130c565b915061112a826116ee565b604082019050919050565b61113e816113b1565b82525050565b61114d816113bb565b82525050565b60006020820190506111686000830184610fa3565b92915050565b60006020820190506111836000830184610fb2565b92915050565b600060208201905081810360008301526111a38184610fc1565b905092915050565b600060208201905081810360008301526111c481610ffa565b9050919050565b600060208201905081810360008301526111e48161101d565b9050919050565b6000602082019050818103600083015261120481611040565b9050919050565b6000602082019050818103600083015261122481611063565b9050919050565b6000602082019050818103600083015261124481611086565b9050919050565b60006020820190508181036000830152611264816110a9565b9050919050565b60006020820190508181036000830152611284816110cc565b9050919050565b600060208201905081810360008301526112a4816110ef565b9050919050565b600060208201905081810360008301526112c481611112565b9050919050565b60006020820190506112e06000830184611135565b92915050565b60006020820190506112fb6000830184611144565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611328826113b1565b9150611333836113b1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113685761136761142d565b5b828201905092915050565b600061137e82611391565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156113e65780820151818401526020810190506113cb565b838111156113f5576000848401525b50505050565b6000600282049050600182168061141357607f821691505b602082108114156114275761142661145c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61174681611373565b811461175157600080fd5b50565b61175d816113b1565b811461176857600080fd5b5056fea264697066735822122005e3d567491bd150e2f4882a371eae795b7396f4a9ba980d2ea9c9a426a14f5c64736f6c63430008040033";

export class ERC20Upgradeable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC20Upgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20Upgradeable {
    return super.attach(address) as ERC20Upgradeable;
  }
  connect(signer: Signer): ERC20Upgradeable__factory {
    return super.connect(signer) as ERC20Upgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20UpgradeableInterface {
    return new utils.Interface(_abi) as ERC20UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC20Upgradeable;
  }
}
